Assignment name : polyset
Expected files : searchable_array_bag.cpp, searchable_array_bag.hpp,
searchable_tree_bag.cpp, searchable_tree_bag.hpp, set.cpp, set.hpp
--------------------------------------------------------------------------------
you will find in this directory some classes:
- bag: an abstract class representing a bag
- searchable_bag: an abstract class representing a bag with the ability to
search in it.
- array_bag: an implementation of a bag with an array as underlying data
structure.
- tree_bag: an implementation of a bag with a binary search tree as underlying
data structure.
If you don't know what is a set or a bag (shame) you can read the attached file:
shame.en.txt
#### First part ####
Since a bag without a searching function isn't very useful, implement two
classes searchable_array_bag and searchable_tree_bag that will inherit from
array_bag and tree_bag (respectively) and implement the searchable_bag abstract
class.
#### Second part ####
Implement the class set that will wrap a searchable_bag and turn it into a set.
You will find in this directory a main that must compile with your code.
All your classes should be under orthodox canonical form.
Don't forget the consts.
The optimization of your code isn't important in this exercise.